# Map routes search queries to the appropriate backend.
# Regex is evaluated once per request; enable `pcre_jit` for best speed.
map $arg_q $dest {
    # direct image search
    ~*(?i)\bpictures?\s+of\b                         google_images;
    # map and direction queries
    ~*(?i)\b(near\s+me|directions?\s+to|map\s+of)\b  google_maps;
    # Wikipedia lookups
    ~*(?i)\b(?:biography|history|life\s+of)\b        wikipedia;
    # question detection
    ~*(?i)\b(who|what|when|where|why|how|can|could|would|should|do|did|is|are|was|were|am|will|whom|whose|which)\b chatgpt;
    # instructional queries
    ~*(?i)\b(explain|describe|compare|define)\b      chatgpt;
    # explicit wiki keywords
    ~*(?i)\bwikipedia\b|\bwiki\b                     wikipedia;
    ~*(?i)^nginx$                wikipedia;
    ~*(?i)^New\ York$                wikipedia;
    ~*(?i)^openai$                wikipedia;
    ~*(?i)^cat\ pictures$                google_images;
    default                                          google;
}

# Map engine names to full URL targets. Update this list in Go.
map $dest $target {
    chatgpt https://chatgpt.com/?q=$arg_q;
    google https://www.google.com/search?q=$arg_q;
    google_images https://www.google.com/search?tbm=isch&q=$arg_q;
    google_maps https://www.google.com/maps/search/?q=$arg_q;
    wikipedia https://en.wikipedia.org/wiki/$arg_q;
}

server {
    listen 80;
    server_name search.localhost;

    location / {
        return 302 $target;
    }
}

