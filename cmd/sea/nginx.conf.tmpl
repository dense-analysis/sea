# Map routes search queries to the appropriate backend.
# Regex is evaluated once per request; enable `pcre_jit` for best speed.
map $arg_q $dest {
    # direct image search
    ~*(?i)\bpictures?\s+of\b                         google_images;
    # map and direction queries
    ~*(?i)\b(near\s+me|directions?\s+to|map\s+of)\b  google_maps;
    # Wikipedia lookups
    ~*(?i)\b(?:biography|history|life\s+of)\b        wikipedia;
    # ChatGPT queries
    ~*(?i)^(add|allow|appear|ask|begin|believe|bring|build|buy|call)\b chatgpt;
    ~*(?i)^(change|come|consider|create|cut|do|fall|feel|find)\b chatgpt;
    ~*(?i)^(follow|forgive|generate|get|give|go|grow|have|hear|help)\b chatgpt;
    ~*(?i)^(include|keep|kill|know|learn|leave|let|like|live|look)\b chatgpt;
    ~*(?i)^(lose|love|make|mean|meet|move|offer|open|pay|play)\b chatgpt;
    ~*(?i)^(provide|put|read|reach|remain|remember|send|serve|set)\b chatgpt;
    ~*(?i)^(show|sit|speak|spend|stand|start|stay|stop|succeed|take)\b chatgpt;
    ~*(?i)^(talk|tell|think|try|turn|understand|use|watch|work)\b chatgpt;
    ~*(?i)^(write|what|how|why|when|where|who|which|whose|will)\b chatgpt;
    ~*(?i)^(would|can|could|should|might|must|may|does|did|are|is)\b chatgpt;
    ~*(?i)^(was|were|am|i|we|team|explain|list|compare|contrast)\b chatgpt;
    ~*(?i)^(summarize|translate|define|describe|recommend|analyze)\b chatgpt;
    ~*(?i)^(evaluate|outline|plan|design|develop|propose|edit)\b chatgpt;
    ~*(?i)^(improve|fix|optimize|assist|research|brainstorm|suggest)\b chatgpt;
    ~*(?i)^(solve|calculate|interpret|categorize|classify|format)\b chatgpt;
    ~*(?i)^(style|proofread|review|listen|plot|graph|chart|map)\b chatgpt;
    ~*(?i)^(diagram|simulate|predict|forecast|estimate|answer|reply)\b chatgpt;
    ~*(?i)^(respond|inquire|query|request|discuss)\b                 chatgpt;
    # explicit wiki keywords
    ~*(?i)\bwikipedia\b|\bwiki\b                     wikipedia;
{{- range .CustomKeywords }}
    ~*(?i)^{{ escape .Phrase }}$                {{ .Dest }};
{{- end }}
    default                                          google;
}

# Map engine names to full URL targets. Update this list in Go.
map $dest $target {
    chatgpt https://chatgpt.com/?q=$arg_q;
    google https://www.google.com/search?q=$arg_q;
    google_images https://www.google.com/search?tbm=isch&q=$arg_q;
    google_maps https://www.google.com/maps/search/?q=$arg_q;
    wikipedia https://en.wikipedia.org/wiki/$arg_q;
}

{{ if gt .ListenSSL 0 }}
server {
    listen {{ .ListenSSL }} ssl http2;
    listen [::]:{{ .ListenSSL }} ssl http2;
    server_name {{ .ServerName }};
    keepalive_timeout 5;
{{- if .SSLCertificate }}
    ssl_certificate {{ .SSLCertificate }};
    ssl_certificate_key {{ .SSLCertificateKey }};
{{- if .LetsEncrypt }}
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
{{- end }}
{{- end }}

    location / {
        return 302 $target;
    }
}
{{ if .RedirectHTTP }}
server {
    if ($host = {{ .ServerName }}) {
      return 301 https://$host$request_uri;
    }

    listen {{ .Listen }};
    listen [::]:{{ .Listen }};
    server_name {{ .ServerName }};

    return 404;
}
{{ else }}
server {
    listen {{ .Listen }};
    listen [::]:{{ .Listen }};
    server_name {{ .ServerName }};

    location / {
        return 302 $target;
    }
}
{{ end }}
{{ else }}
server {
    listen {{ .Listen }};
    listen [::]:{{ .Listen }};
    server_name {{ .ServerName }};

    location / {
        return 302 $target;
    }
}
{{ end }}
